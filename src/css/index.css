@import url("https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600&display=swap");

:root {
  --dark-gray: #1a2a32;
  --gray: #2e4756;
  --turquoise: #3cc4bf;
  --yellow: #f2b147;
  --light-gray: #d3d3d3;
}

* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
  list-style: none;
  font-family: "Montserrat", sans-serif;
  border: none;
}

html,
body {
  height: 100%;
  background-color: var(--dark-gray);
}

body {
  /* Will bring contents in <Main> Dead Center of screen */
  padding: 90px 20px;
  display: flex;
  flex-direction: column; /* Below will center contents Horizontally */
  justify-content: center; /* Below will center contents Vertically */
  align-items: center;
}

/* Shared utility classes */

button:hover {
  cursor: pointer;
  opacity: 90%;
}

.hidden {
  display: none !important;
}

.yellow {
  color: var(--yellow);
}

.turquoise {
  color: var(--turquoise);
}

.shadow {
  box-shadow: rgba(0, 0, 0, 0.4) 0px 2px 4px,
    rgba(0, 0, 0, 0.3) 0px 7px 13px -3px, rgba(0, 0, 0, 0.2) 0px -3px 0px inset;
}

.border {
  border: 1px solid rgba(211, 211, 211, 0.4) !important;
}

/* Mobile styles */
.grid { 
  display: grid;
  grid-template-columns: repeat(3, 80px); /* Each column is going to be 80px wide */
  grid-template-rows: 50px repeat(3, 80px) 60px;   /* First row is 50px tall, the next 3 rows will be 80px tall, and the final row will be 60px tall */
  gap: 5px; /* Add spacing between divs - was formally handled by margin property in .grid div{} */
}

/* Desktop styles */
@media (min-width: 768px) {
  .grid {
    width: 490px;
    grid-template-columns: repeat(3, 150px);
    grid-template-rows: 50px repeat(3, 150px) 60px;
    gap: 20px;
  }
}

.turn {
  color:var(--yellow);
  /* Two lines below will: Span a div 2 columns wide*/
  grid-column-start: 1;
  grid-column-end: 3;
  align-self: center;
  /* Bottom three lines tells app how to align items within this grid container. */
  display: flex;
  align-items: center;
  gap: 20px;
}

.turn p {
  font-size: 14px;
  /* Duration: 0.6s,  behavior: ease-in-out, reference(name you'll refer to in @keyframe): turn-text-animation*/
  animation: 0.6s ease-in-out turn-text-animation;
}

@keyframes turn-text-animation {
  0% {
    opacity: 0;
    transform: translateX(-20px);
  }
  100% {
    opacity: 100%;
    transform: translateX(0);
  }
}

.turn i {
  font-size: 1.8rem;
  margin-left: 10px;
  /* Duration: 0.6s,  behavior: ease-in-out, reference(name you'll refer to in @keyframe): turn-icon-animation*/
  animation: 0.6s ease-in-out turn-icon-animation;
}

@keyframes turn-icon-animation {
  0% {
    transform: scale(1);
  }
  25% {
    transform: scale(1.4);
  }
  100% {
    transform: scale(1);
  }
}

.square {
  background-color: var(--gray);
  border-radius: 10px;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 3rem;
}

.square:hover {
  cursor: pointer;
  opacity: 90%;
}

.score {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  border-radius: 10px;
}

.score p {
  font-size: 14px;
  font-weight: 600; /* Part of google font import, would not be able to use otherwise */
}

.score span {
  font-size: 12px;
  margin-top: 2px;
}

/* Menu styles  */
.menu {
  position: relative;
}

.menu-btn {
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: space-around;
  align-items: center;
  color: white;
  background-color: rgba(211, 211, 211, 0.05);
  border: 1px solid transparent;
  border-radius: 10px;
}

.items {
  position: absolute;
  z-index: 10; /* Means it will sit over the grid of items, not behind*/
  top: 60px;
  right: 0;
  background-color: #203139;
  border-radius: 2px;
  padding: 10px;
}

.items button {
  background-color: transparent;
  padding: 8px;
  color: white;
}

.items button:hover {
text-decoration: underline;
cursor: pointer;
}

/* Footer styles */
footer {
  color: white;
  margin-top: 50px;
}

footer p {
  margin-top: 10px;
  text-align: center;
}

footer a {
  color: var(--yellow);
}

/* Modal styles - opens when game finishes  */

.modal {
  display: flex;
  justify-content: center;
  align-items: center;
  position: fixed; /* relative to the entire viewport */
  /* width and height will work because we have given html .body a height of 100%  */
  width: 100%; 
  height: 100%; 
  background-color: rgba(0, 0, 0, 0.6);
}

.modal-contents {
  /* transform: translateY(-80px); */
  height: 150px;
  width: 100%;
  /* By default: 100% width but if screen is big enough where 100% width is larger than 300px, then default to max width. Just a trick to use with mobile first css so it will always look good on any screen.  */
  max-width: 300px;
  background-color: #2a4544;
  border-radius: 20px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 20px;
  color: white;
  margin: 10px;
}

/* This CSS code defines the styling for buttons within a modal window. */
.modal-contents button {
  padding: 10px;
  background-color: var(--turquoise);
  color: #2a4544;
  border-radius: 3px;
}